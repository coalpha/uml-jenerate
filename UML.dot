digraph UML {
   node [
      fontname="Bitstream Vera Sans"
      fontsize=14
      shape=record
   ]

   "Iterable" [
      label="{Iterable}"
   ]

   "Iterator" [
      label="{Iterator}"
   ]

   "AB_Entry" [
      label="{
         AB_Entry
         |
         ~final context: Path\l
         ~final className: String\l
         |
         +toString(): String\l
      }"
   ]

   "ClassFile" [
      label="{
         ClassFile
         |
         ~final path: Path\l
         ~final nameCount: int\l
         |
         +toString(): String\l
         +iterator(): Iterator\l
         ~stream(): Stream\l
         +spliterator(): Spliterator\l
         ~static make(p: Path): ClassFile\l
         ~chopAt(idx: int): AB_Entry\l
      }"
   ]

   "ClassFileIter" [
      label="{
         ClassFileIter
         |
         -cursor: int\l
         -final underlaying: ClassFile\l
         |
         +hasNext(): boolean\l
         +volatile next(): Object\l
         +next(): AB_Entry\l
      }"
   ]

   "ClassFiles" [
      label="{
         ClassFiles
         |
         +static classes(where: Path): Stream\l
      }"
   ]

   "DOTFile" [
      label="{
         DOTFile
         |
         -final sb: StringBuilder\l
         -final outfile: Path\l
         |
         ~write(): void\l
      }"
   ]

   "fmt" [
      label="{
         fmt
         |
         +static str(m: Method): String\l
         +static str(f: Field): String\l
         +static str(type: Class): String\l
         +static str(mod: int): String\l
         +static str(p: Parameter): String\l
         +static viz(mod: int): char\l
      }"
   ]

   "InnerNode" [
      label="{
         InnerNode
         |
         ~final name: String\l
         |
         ~name(): String\l
         +toString(): String\l
      }"
   ]

   "LoadedClass" [
      label="{
         LoadedClass
         |
         ~final how: AB_Entry\l
         ~final clazz: Class\l
      }"
   ]

   "Loader" [
      label="{
         Loader
         |
         +static load(classfile: ClassFile): LoadedClass\l
         +static load(e: AB_Entry): LoadedClass\l
      }"
   ]

   "Main" [
      label="{
         Main
         |
         +static main(args: String[]): void\l
      }"
   ]

   "Node" [
      label="{
         Node
         |
         ~clazz: Class\l
         |
         ~abstract name(): String\l
         +abstract toString(): String\l
         ~methods(): Method[]\l
         ~fields(): Field[]\l
         ~static eq(a: Node, b: Node): boolean\l
         ~static good_class(node: Node): boolean\l
         ~referenced(): Stream\l
         ~dot_symbol(): String\l
      }"
   ]

   "OuterNode" [
      label="{
         OuterNode
         |
         ~name(): String\l
         +toString(): String\l
      }"
   ]

   "util" [
      label="{
         util
         |
         +static final sc: Scanner\l
         |
         +static basename(s: String): String\l
         +static cancel(path: Path): boolean\l
         +static wslpath(path: Path): String\l
         +static prompt(prompt: String): String\l
         +static realpath(path: Path): Path\l
         +static dedupe_right(ary: Object[]): List\l
         +static dedupe_right(ary: Object[], eq: BiPredicate): List\l
         +static allParents(path: Path): Stream\l
      }"
   ]
   "Iterable" -> "ClassFile"
   "Iterator" -> "ClassFileIter"
   "Node" -> "InnerNode"
   "Node" -> "OuterNode"
}
